version: '3.8'

services:
  alopecosa-crawler:
    build: .
    container_name: alopecosa-fabrilis-crawler
    ports:
      - "5000:5000"
    environment:
      # Flask configuration
      - FLASK_ENV=production
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY:-alopecosa-fabrilis-spider-2024}
      
      # OpenAI API configuration (optional)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-3.5-turbo}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-ada-002}
      - OPENAI_MAX_TOKENS=${OPENAI_MAX_TOKENS:-400}
      - OPENAI_TEMPERATURE=${OPENAI_TEMPERATURE:-0.2}
      
      # AI thresholds
      - AI_RELEVANCE_THRESHOLD=${AI_RELEVANCE_THRESHOLD:-0.6}
      - AI_QUALITY_THRESHOLD=${AI_QUALITY_THRESHOLD:-0.7}
      - AI_SIMILARITY_THRESHOLD=${AI_SIMILARITY_THRESHOLD:-0.9}
      
      # Rate limiting
      - OPENAI_RPM_LIMIT=${OPENAI_RPM_LIMIT:-60}
      - OPENAI_CONCURRENT_LIMIT=${OPENAI_CONCURRENT_LIMIT:-5}
      
      # Crawler settings
      - ALOPECOSA_USER_AGENT=${ALOPECOSA_USER_AGENT:-Alopecosa-Fabrilis-Crawler/1.0}
    
    volumes:
      # Persist database and crawl results
      - ./data:/app/data
      - ./crawl_results:/app/crawl_results
      - ./logs:/app/logs
      
      # Mount templates for easy customization
      - ./templates:/app/templates:ro
    
    restart: unless-stopped
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a simple nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: alopecosa-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - alopecosa-crawler
    restart: unless-stopped
    profiles:
      - production

volumes:
  crawler_data:
    driver: local

